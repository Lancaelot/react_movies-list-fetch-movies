{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","props","useState","movieFromServer","setMovieFromServer","setError","inputValue","setInputValue","isFocused","setIsFocused","baseURL","moviesToRender","onSubmit","event","sendMovie","newMovie","some","push","preventDefault","submitMovieForm","addNewMovie","htmlFor","type","id","placeholder","value","onChange","target","onBlur","onClick","fetch","then","response","a","json","data","ok","Error","message","Title","Plot","Poster","imdbID","catch","fetchError","searchRequest","App","state","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f9d3c86.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nfunction searchRequest(baseURL, setMovieFromServer, setError) {\n  fetch(baseURL)\n    .then(async(response) => {\n      const data = await response.json();\n\n      if (response.ok) {\n        return data;\n      }\n\n      throw new Error(data.message);\n    })\n    .then((data) => {\n      setMovieFromServer({\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster,\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      });\n    })\n    .catch((fetchError) => {\n      setError(fetchError.message);\n    });\n}\n\nfunction submitMovieForm(\n  event, sendMovie, newMovie, setInputValue,\n  setIsFocused, setMovieFromServer, movieFromServer, moviesToRender,\n) {\n  if (movieFromServer) {\n    if (!moviesToRender\n      .some(movie => movie.imdbId === movieFromServer.imdbId)\n    ) {\n      moviesToRender.push(movieFromServer);\n    }\n  }\n\n  event.preventDefault();\n  sendMovie(newMovie);\n  setInputValue('');\n  setIsFocused(false);\n  setMovieFromServer(null);\n}\n\nexport function FindMovie(props) {\n  const [movieFromServer, setMovieFromServer] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [error, setError] = useState('try again later');\n  const [inputValue, setInputValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const baseURL = `https://www.omdbapi.com/?apikey=52026275&t=${inputValue}`;\n  const moviesToRender = [...props.movies];\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => submitMovieForm(\n          event, props.addNewMovie,\n          moviesToRender, setInputValue,\n          setIsFocused, setMovieFromServer,\n          movieFromServer, moviesToRender,\n        )}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={isFocused && !inputValue\n                  ? 'input is-danger'\n                  : 'input'\n                }\n                value={inputValue}\n                onChange={event => setInputValue(event.target.value)}\n                onBlur={() => setIsFocused(true)}\n              />\n            </div>\n          </label>\n\n          <p className=\"help is-danger\">\n            {\n              isFocused && !inputValue\n                ? 'Can\\'t find a movie with such a title'\n                : ''\n            }\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => searchRequest(\n                baseURL, setMovieFromServer, setError,\n                moviesToRender, movieFromServer,\n              )}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movieFromServer && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movieFromServer} />\n        </div>\n      )}\n    </>\n  );\n}\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addNewMovie = (newMovie) => {\n    this.setState({\n      movies: newMovie,\n    });\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addNewMovie={this.addNewMovie}\n            movies={this.state.movies}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}